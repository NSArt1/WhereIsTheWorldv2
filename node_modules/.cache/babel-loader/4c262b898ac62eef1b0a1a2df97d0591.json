{"ast":null,"code":"export const SET_LOADING = '@@details/SET_LOADING';\nexport const SET_ERROR = '@@details/SET_ERROR';\nexport const SET_COUNTRY = '@@details/SET_COUNTRY';\nexport const CLEAR_DETAILS = '@@details/CLEAR_DETAILS';\nexport const SET_NEIGHBOURS = '@@details/SET_NEIGHBOURS';\n\nconst setLoading = () => ({\n  type: SET_LOADING\n});\n\nconst setError = err => ({\n  type: SET_ERROR,\n  payload: err\n});\n\nconst setCountry = country => ({\n  type: SET_COUNTRY,\n  payload: country\n});\n\nexport const setNeighbors = countries => ({\n  type: SET_NEIGHBOURS,\n  payload: countries\n});\nexport const clearDeatils = () => ({\n  type: CLEAR_DETAILS\n});\nexport const loadCountryByName = name => (dispatch, _, _ref) => {\n  let {\n    client,\n    api\n  } = _ref;\n  dispatch(setLoading());\n  client.get(api.searchByCountry(name)).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n    dispatch(setCountry(data[0]));\n  }).catch(err => {\n    dispatch(setError(err.message));\n  });\n};\nexport const loadNeighborsByBorder = borders => (dispatch, _, _ref3) => {\n  let {\n    client,\n    api\n  } = _ref3;\n  client.get(api.filterByCode(borders)).then(_ref4 => {\n    let {\n      data\n    } = _ref4;\n    dispatch(setNeighbors(data.map(c => c.name)));\n  });\n};","map":{"version":3,"sources":["/home/artemint/Документы/wicountry/1/myproj/src/store/details/details-actions.js"],"names":["SET_LOADING","SET_ERROR","SET_COUNTRY","CLEAR_DETAILS","SET_NEIGHBOURS","setLoading","type","setError","err","payload","setCountry","country","setNeighbors","countries","clearDeatils","loadCountryByName","name","dispatch","_","client","api","get","searchByCountry","then","data","catch","message","loadNeighborsByBorder","borders","filterByCode","map","c"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAC,uBAAlB;AACP,OAAO,MAAMC,SAAS,GAAG,qBAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,uBAApB;AACP,OAAO,MAAMC,aAAa,GAAC,yBAApB;AACP,OAAO,MAAMC,cAAc,GAAC,0BAArB;;AAEP,MAAMC,UAAU,GAAC,OAAK;AAClBC,EAAAA,IAAI,EAAEN;AADY,CAAL,CAAjB;;AAIA,MAAMO,QAAQ,GAAEC,GAAD,KAAQ;AACnBF,EAAAA,IAAI,EAAEL,SADa;AAEnBQ,EAAAA,OAAO,EAAED;AAFU,CAAR,CAAf;;AAKA,MAAME,UAAU,GAAIC,OAAD,KAAY;AAC3BL,EAAAA,IAAI,EAACJ,WADsB;AAE3BO,EAAAA,OAAO,EAACE;AAFmB,CAAZ,CAAnB;;AAIA,OAAO,MAAMC,YAAY,GAAIC,SAAD,KAAc;AACtCP,EAAAA,IAAI,EAACF,cADiC;AAEtCK,EAAAA,OAAO,EAAEI;AAF6B,CAAd,CAArB;AAIP,OAAO,MAAMC,YAAY,GAAG,OAAK;AAC7BR,EAAAA,IAAI,EAAEH;AADuB,CAAL,CAArB;AAGP,OAAO,MAAMY,iBAAiB,GAAIC,IAAD,IAAQ,CAACC,QAAD,EAAWC,CAAX,WAA8B;AAAA,MAAhB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAgB;AACnEH,EAAAA,QAAQ,CAACZ,UAAU,EAAX,CAAR;AACAc,EAAAA,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,eAAJ,CAAoBN,IAApB,CAAX,EACCO,IADD,CACM,SAAW;AAAA,QAAV;AAACC,MAAAA;AAAD,KAAU;AAAEP,IAAAA,QAAQ,CAACP,UAAU,CAACc,IAAI,CAAC,CAAD,CAAL,CAAX,CAAR;AAA8B,GADjD,EAECC,KAFD,CAEQjB,GAAD,IAAO;AAACS,IAAAA,QAAQ,CAACV,QAAQ,CAACC,GAAG,CAACkB,OAAL,CAAT,CAAR;AAAgC,GAF/C;AAGH,CALM;AAOP,OAAO,MAAMC,qBAAqB,GAAGC,OAAD,IAAW,CAACX,QAAD,EAAWC,CAAX,YAA8B;AAAA,MAAhB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAgB;AACzED,EAAAA,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACS,YAAJ,CAAiBD,OAAjB,CAAX,EACCL,IADD,CACM,SAAW;AAAA,QAAV;AAACC,MAAAA;AAAD,KAAU;AAAEP,IAAAA,QAAQ,CAACL,YAAY,CAACY,IAAI,CAACM,GAAL,CAAUC,CAAD,IAAMA,CAAC,CAACf,IAAjB,CAAD,CAAb,CAAR;AAA+C,GADlE;AAEH,CAHM","sourcesContent":["export const SET_LOADING='@@details/SET_LOADING';\nexport const SET_ERROR = '@@details/SET_ERROR';\nexport const SET_COUNTRY = '@@details/SET_COUNTRY';\nexport const CLEAR_DETAILS='@@details/CLEAR_DETAILS';\nexport const SET_NEIGHBOURS='@@details/SET_NEIGHBOURS';\n\nconst setLoading=()=>({\n    type: SET_LOADING\n});\n\nconst setError=(err)=>({\n    type: SET_ERROR,\n    payload: err,\n});\n\nconst setCountry = (country)=>({\n    type:SET_COUNTRY,\n    payload:country,\n});\nexport const setNeighbors = (countries)=>({\n    type:SET_NEIGHBOURS,\n    payload: countries,\n});\nexport const clearDeatils = ()=>({\n    type: CLEAR_DETAILS,\n});\nexport const loadCountryByName = (name)=>(dispatch, _, {client, api})=>{\n    dispatch(setLoading());\n    client.get(api.searchByCountry(name))\n    .then(({data})=> { dispatch(setCountry(data[0]))})\n    .catch((err)=>{dispatch(setError(err.message))})\n};\n\nexport const loadNeighborsByBorder= (borders)=>(dispatch, _, {client, api})=>{\n    client.get(api.filterByCode(borders))\n    .then(({data})=> { dispatch(setNeighbors(data.map((c)=> c.name)))});  \n}"]},"metadata":{},"sourceType":"module"}